Lost Generation TODO
--------------------

[X] Pathfinding Class architecture *
[X] Pathfinding Class unit tests *
[X] Walk Skill + Pathfinding class refactor

[] Goal Oriented Action Planning
	[X] Skill Architecture
	[x] Remove IEquatable dependency in Pathfinding
	[X] Refactor SkillNode into DecisionNode
	[X] Graph builder
		[X] Figure out endless loop problem
			* Builder doesn't process if edge already exists
		[X] Even/Odd test isn't working how you expected:
			EvenDecisions - only even causes
			OddDecisions - only odd causes
		    Happening b/c of propagated StateOffsets? Is that actually correct?
	[] GOAP Integration Tests
	
[] Pawn Controller architecture
[] Visualization Layer

Architecture Notes
------------------
* Separate Skills from their Combatants?
	* Constructing the GOAP Skill Graph is O(n^2), naively. Best if we only have one instance of the graph per enemy type?
* Should probably separate Skills from SkillNodes
	* Skills should contain the logic to create certain actions, but don't have a specific outcome
	* The Decision class
		* The same as "Action" in all the tutorials, but that name's already taken here.
		* Uses Skills to generate an outcome (Postcondition / Goal). This is what contains all the GraphNode stuff.


Assets
* Scriptable Objects + Assets for data not mutable at runtime
* JSON for mutable data?

Not mutable:
	* Enemy templates
	* Board Themes
	* Armor and weapon definitions

Mutable
	* Characters
	* Character relationships
	* Character loadouts
	* Character knowledge
	* Basically the saved game


Import Notes
------------
From Blender
	* Export FBX Y Forward Z Up